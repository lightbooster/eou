hydra:
  run:
    dir: outputs/${name}/train_ivr_dp

name: &name "eou_${now:%Y-%m-%d_%H-%M-%S}"

debug: False
cuda_device: &cuda_device "cuda:5"

# data
sample_rate: &sample_rate 8000
n_mels: &n_mels 64
melspec_ms: &melspec_ms 10
eou_window_size: &eou_window_size 10  # 10 melspec frames of 0.01s = 0 inf.1s window

server_eou_hp: &server_eou_hp
  eou_ml_threshold: 0.5
  eou_ml_window_threshold: 3
  eou_model_type: "ml"
  eou_non_partial_interval: 0.1
  eou_threshold: 2.0
  eou_absolute_ml_threshold: 1.1

# learn hyper parameters
learner:
  comment: *name
  cuda_device: *cuda_device
  batch_size: &batch_size 32
  learning_rate: 0.00005
  weight_decay: 0.0
  opt_step: 1
  opt_gamma: 2.0e-5
  enable_cos_lr: True
  enable_warmup: False
  epochs: &epochs 85
  epochs_scheduler: &epochs_scheduler 80
  loss_coef_scheduler:
    epochs: 80
    start: 0.5
    end: 0.5
  show_server_like_metrics: True
  server_eou_hp: *server_eou_hp
  pretrained_checkpoint: "../pretrain_ivr_dp/eou_vad_checkpoint.pt"        # to initialize model's weights
  continue_from_checkpoint: False  # to load optimizer state from checkpoint
  output_checkpoint: "./eou_vad_checkpoint.pt"  # relative path to save in log dir

  # quadratic loss
  quad_loss:
    max_value: 10.0
    loss_type: ''             # ('AREA', 'FP') or empty
    quad_area: -1                 # for 'AREA' type, -1 to disable
    quad_left: False              # for 'AREA' type
    quad_right: False             # for 'AREA' type
    quad_fp_prob_threshold: 0.99  # for 'FP' type

# model description
recipe:
  model_type: "LSTM"   # ("LSTM", "CONV_LSTM")
  batch_size: *batch_size
  eou_window_size: *eou_window_size
  n_mels: *n_mels
  # lstm layer
  hidden_size: 128
  num_layers: 2
  # conv layer (over single eou window)
  out_channels: 5
  kernel_size: 4
  stride: 2
  padding: 0
  # common
  dropout: 0.25

exporter:
  cuda_device: *cuda_device
  output_onnx: "./eou_vad.onnx"
  output_json: "./output.json"
  threshold: 1.0e-07

# only for learning from wavs
augmentator: &augmentator
  augmentations: [
    [ 
      {name: Zeroing, kwargs: {frame_size: 80,   use_vad: False, probability: 0.3}},
      {name: NoiseInjection, kwargs: {noise_color: "white", volume: 0.001}}
    ],
    [
      {name: Zeroing, kwargs: {frame_size: 160,  use_vad: False, probability: 0.2}},
      {name: NoiseInjection, kwargs: {noise_color: "white", volume: 0.001}}
    ],
    [ 
      {name: Zeroing, kwargs: {frame_size: 320,  use_vad: False, probability: 0.1}},
      {name: NoiseInjection, kwargs: {noise_color: "white", volume: 0.001}}
    ],
    [ 
      {name: Zeroing, kwargs: {frame_size: 80,   use_vad: True,  probability: 1.0}},
      {name: NoiseInjection, kwargs: {noise_color: "white", volume: 0.001}}
    ],
    [ 
      {name: Zeroing, kwargs: {frame_size: 3200, use_vad: True,  strict_packets_num: 2}},
      {name: NoiseInjection, kwargs: {noise_color: "white", volume: 0.001}}
    ],

    [ {name: VolumeFluctuations, kwargs: {period_seconds: 1.0, volume_min: 0.1, volume_max: 1.0}}],
    [ {name: VolumeFluctuations, kwargs: {period_seconds: 2.0, volume_min: 0.1, volume_max: 1.0}}],
    [ {name: VolumeFluctuations, kwargs: {period_seconds: 5.0, volume_min: 0.1, volume_max: 1.0}}],

    [ {name: GainScaling, kwargs: {gain: 0.001}}],
    [ {name: GainScaling, kwargs: {gain: 0.01}}],
    [ {name: GainScaling, kwargs: {gain: 10}}],
    [ {name: GainScaling, kwargs: {gain: 100}}],

    [ 
      {name: FrequencyPass, kwargs: {mode: enm:FrequencyPassMode.HIGH, frequency: 1600, width: 1}},
      {name: NoiseInjection, kwargs: {noise_color: "white", volume: 0.005}}
    ],
    [ 
      {name: FrequencyPass, kwargs: {mode: enm:FrequencyPassMode.HIGH, frequency: 1600, width: 1}},
      {name: NoiseInjection, kwargs: {noise_color: "pink", volume: 0.01}}
    ],

    [
      {name: BackgroundInjection, kwargs: {pool: [
        '/home/asapozhnikov/projects/eou/data/lofi_music_8khz_1h.wav'
      ], sample_rate: *sample_rate, weight_injection: 0.2}}
    ],
    [
      {name: BackgroundInjection, kwargs: {pool: [
        '/home/asapozhnikov/projects/eou/data/lofi_music_8khz_1h.wav',
      ], sample_rate: *sample_rate, weight_injection: 0.5}}
    ],
    [
      {name: BackgroundInjection, kwargs: {pool: [
        '/home/asapozhnikov/projects/eou/data/lofi_music_8khz_1h.wav',
      ], sample_rate: *sample_rate, weight_injection: 0.75}}
    ],
    [
      {name: BackgroundInjection, kwargs: {pool: [
        '/home/asapozhnikov/projects/eou/data/lofi_music_8khz_1h_highpass.wav'
      ], sample_rate: *sample_rate, weight_injection: 1.0}}
    ],
    [
      {name: BackgroundInjection, kwargs: {pool: [
        '/home/asapozhnikov/projects/eou/data/lofi_music_8khz_1h_highpass.wav'
      ], sample_rate: *sample_rate, weight_injection: 0.5}}
    ],

    [],
  ]

  probabilities: [
    # Zeroing
    0.03, 0.03, 0.02, 0.01, 0.01,
    # VolumeFluctuations
    0.03, 0.03, 0.02,
    # Gain
    0.035, 0.02, 0.02, 0.035,
    # Highpass
    0.035, 0.035,
    # Music
    0.01, 0.01, 0.01, 0.005, 0.005,
    # No aug
    0.6
  ]

# only for learning from wavs
feature_extraction_params: &feature_extraction_params
  sampling_freq: *sample_rate
  normalize_gain: False
  dithering_dynamic: True
  dither_val: 1.0e-07
  high_freq_filterbank: 4000


# datasets
min_silence_len: &min_silence_len -0.5             # length of pause after speech; negative values to allow zero labels
# pad_target_seconds: &pad_target_seconds 0.3        # add seconds to the target eou; allows to delay the growth of probs
# pad_unigram_seconds: &pad_unigram_seconds 0.1      # add seconds to the unigram eou; allows to delay the growth of probs
# IVR
pad_target_seconds: &pad_target_seconds 1.0        # add seconds to the target eou; allows to delay the growth of probs
pad_unigram_seconds: &pad_unigram_seconds 0.2      # add seconds to the unigram eou; allows to delay the growth of probs
remove_empty_samples: &remove_empty_samples True   # remove samples without hypothesis
unigrams: &unigrams ['да', 'нет', 'угу', 'ало', 'ага', 'повторить',
                     'пять', 'четыре', 'один',
                     'оператор', 'специалист',  'техподдержка', 'отмена', 'оператора',
                     'эквайринг', 'дебетовая', 'потребительский', 'мошенничество']

train_ds:
  manifest_path: [
    '/home/asapozhnikov/projects/eou/data/eou_vad_dataset_8khz/train.tsv',
  ]
  batch_size: *batch_size
  sample_rate: *sample_rate
  n_mels: *n_mels
  melspec_ms: *melspec_ms
  eou_window_size: *eou_window_size
  min_silence_len: *min_silence_len
  remove_empty_samples: *remove_empty_samples
  pad_target_seconds: *pad_target_seconds
  pad_unigram_seconds: *pad_unigram_seconds
  n_workers: 4
  prefetch_factor: 2
  shuffle: False
  feature_extraction_params: *feature_extraction_params
  unigrams: *unigrams
  augmentor: *augmentator

valid_ds:
  manifest_path: [
    '/home/asapozhnikov/projects/eou/data/eou_vad_dataset_8khz/valid.tsv'
  ]
  batch_size: *batch_size
  sample_rate: *sample_rate
  n_mels: *n_mels
  melspec_ms: *melspec_ms
  eou_window_size: *eou_window_size
  min_silence_len: *min_silence_len
  pad_target_seconds: *pad_target_seconds
  pad_unigram_seconds: *pad_unigram_seconds
  remove_empty_samples: *remove_empty_samples
  n_workers: 2
  prefetch_factor: 1
  shuffle: False
  feature_extraction_params: *feature_extraction_params
  unigrams: *unigrams
